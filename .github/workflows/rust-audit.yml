name: "Audit"

on:
  workflow_call:

jobs:
  audit:
    if: "!startsWith(github.event.commits[0].message, 'chore(release): ')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2

      # - name: Set up cargo cache
      #   uses: actions/cache@v3
      #   continue-on-error: false
      #   with:
      #     path: |
      #       ~/.cargo/bin/
      #       ~/.cargo/registry/index/
      #       ~/.cargo/registry/cache/
      #       ~/.cargo/git/db/
      #       target/
      #     key: ${{ runner.os }}-cargo-audit-service-audit
      #     restore-keys: ${{ runner.os }}-cargo-audit-

      - name: Audit
        run: |
          cargo install --locked cargo-audit || true
          cargo audit

  pants:
    if: "!startsWith(github.event.commits[0].message, 'chore(release): ')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2

      # - name: Set up cargo cache
      #   uses: actions/cache@v3
      #   continue-on-error: false
      #   with:
      #     path: |
      #       ~/.cargo/bin/
      #       ~/.cargo/registry/index/
      #       ~/.cargo/registry/cache/
      #       ~/.cargo/git/db/
      #       target/
      #     key: ${{ runner.os }}-cargo-pants-service-audit
      #     restore-keys: ${{ runner.os }}-cargo-pants-

      - name: Pants
        run: |
          cargo install --locked cargo-pants || true
          cargo pants

  # deny:
  #   if: "!startsWith(github.event.commits[0].message, 'chore(release): ')"
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #
  #     - name: Install Rust
  #       uses: dtolnay/rust-toolchain@nightly
  #
  #     - name: Set up cargo cache
  #       uses: actions/cache@v3
  #       continue-on-error: false
  #       with:
  #         path: |
  #           ~/.cargo/bin/
  #           ~/.cargo/registry/index/
  #           ~/.cargo/registry/cache/
  #           ~/.cargo/git/db/
  #           target/
  #         key: ${{ runner.os }}-cargo-deny-service-audit
  #         restore-keys: ${{ runner.os }}-cargo-deny-

  # - name: Deny
  #   run: |
  #     cargo install --locked cargo-deny || true
  #     cargo deny check
